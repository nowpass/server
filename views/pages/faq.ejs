<div id="faq">
    <div class="container">
        <h1>FAQ</h1>
        <div class="q-and-a">
            <hr/>
            <h4>What is NOWPASS?</h4>
            <p>NOWPASS is an Open Source password manager.</p>
        </div>

        <div class="q-and-a">
            <hr/>
            <h4>How do I use NOWPASS?</h4>
            <p>There are multiple ways to use NOWPASS:</p>
            <ul>
                <li>
                    <h5>With nowpass.org as backend API server</h5>
                    <p>
                        You can just register on this website and than use https://nowpass.org as API server. Just
                        download the Chromium / Google Chrome extension (also works in Vivaldi and Opera) and the
                        other NOWPASS applications you want to use (like the Desktop application or the Python command
                        line client)
                    </p>
                </li>
                <li>
                    <h5>With your own backend API server</h5>
                    <p>
                        Set up your own NOWPASS server locally or on a server. Check out the <a
                                href="https://github.com/nowpass/api" target="_blank">GitHub repository</a>
                        for more information.
                    </p>
                </li>
            </ul>
        </div>

        <div class="q-and-a">
            <hr/>
            <h4>Is NOWPASS secure?</h4>
            <p>Clear text passwords are never transmitted to the API server (or anywhere else) or stored anywhere.
                NOWPASS is using AES-CBC-256 encryption to protect your passwords, secure notes etc..</p>
        </div>

        <div class="q-and-a">
            <hr/>
            <h4>Why is the passphrase not tested?</h4>
            <p>If you enter a wrong passphrase you don't get a warning, the clear text is just going to be garbage. This
                is because NOWPASS encrypts every item separately. So you could even use different pass phrases for
                different elements.</p>
        </div>


        <div class="q-and-a">
            <hr/>
            <h4>What technology is used for NOWPASS?</h4>
            <p>NOWPASS includes only trusted, reliable tools that the developers feel comfortable using on our own
                projects.</p>
            <ul>
                <li><a target="_blank" href="http://sailsjs.com"><strong>Sails.js</strong></a> - Backend API and this
                    website
                </li>
                <li><a target="_blank" href="https://vuejs.org/"><strong>Vue.js</strong></a> - Front-end framework on
                    this website and in the extension.
                </li>
                <li><a target="_blank" href="https://github.com/axios/axios"><strong>Axios</strong></a> - AJAX / xhr
                    requests to the API server.
                </li>
                <li><a target="_blank" href="http://getbootstrap.com/docs/4.0/getting-started/introduction/"><strong>Bootstrap
                            4</strong></a> - Front-end component library
                </li>
                <li><a target="_blank" href="http://fontawesome.io/icons/"><strong>Font Awesome</strong></a> - Icons
                </li>
                <li><a target="_blank" href="https://npmjs.com/package/parasails"><strong>parasails.js</strong></a> -
                    Thin layer of bundled conventions for using Vue.js with Sails.js
                </li>
                <li><a target="_blank" href="https://python.org"><strong>Python 3</strong></a> - For the command line
                    client
                </li>
                <li><strong>cloud.js</strong> - Dynamically-generated SDK for handling requests from the front-end to
                    the actions in your Sails app. (More info on usage below.)
                </li>
            </ul>
        </div>

        <div class="q-and-a">
            <hr/>
            <h4>How do I verify my user's email addresses?</h4>
            <p>By default, email verification is neither required for signup, nor for when an existing user changes
                their email address from their account page.</p>
        </div>
        <div class="q-and-a">
            <hr/>
            <h4>How do I finish setting up Mailgun?</h4>
            <p>To use Mailgun, you'll need to <a target="_blank" href="https://www.mailgun.com/">sign up for an
                    account</a>. (While this <em>is</em> a paid service at higher usage levels, you should be able to
                use Mailgun as much as you need to in development without having to provide any credit card
                information.)</p>
            <p>After you've created an account, you'll need to add your Mailgun domain and API secret to your custom
                config. (In development, this will be either in <code>config/custom.js</code>, or in a
                <code>local.js</code> file you add to your <code>config/</code> folder. For your staging or production
                deployment, you'll want to set these using system environment variables -- aka "config variables" in
                Heroku.)</p>
            <p>If you already own a domain for your app, you can follow Mailgun's instructions for configuring a sending
                domain.</p>
            <p>Otherwise, to send emails from this app <em>without</em> configuring a sending domain, you can use the
                sandbox domain &amp; test API secret that comes with your Mailgun account. Just be sure to configure the
                authorized recipents for your sandbox domain first, or there will be errors from the endpoints that
                attempt to send emails.</p>
        </div>
        <div class="q-and-a">
            <hr/>
            <h4>How do I finish setting up Stripe?</h4>
            <p>To use Stripe for your app's payment processing, you'll need to <a target="_blank"
                                                                                  href="https://stripe.com">sign up for
                    an account</a>.</p>
            <p>Once you have an account, you'll need to include your publishable and secret keys in your app's custom
                config as <code>sails.config.custom.stripePublishableKey</code> and <code>sails.config.custom.stripeSecret</code>.
                In development, you can add your test keys to <code>config/custom.js</code>, or in a
                <code>local.js</code> file you add to your <code>config/</code> folder.</p>
            <p>In your staging or production deployment, you'll want to set your API keys using system environment
                variables (aka "config variables" in Heroku), and you will need ensure that your site meets Stripe's
                HTTPS requirements in order for Stripe Checkout to work. For more information, see Stripe's <a
                        target="_blank" href="https://stripe.com/docs/checkout">Detailed Checkout Guide</a>.</p>
        </div>

        <div class="q-and-a">
            <hr/>
            <h4>Where can I go for more help?</h4>
            <p>If you run into trouble, you can often find the answer in the <a target="_blank"
                                                                                href="https://nowpass.org/documentation">Sails.js
                    documentation</a>. Make sure you also check <a href="https://github.com/nowpass">GitHub</a></p>
        </div>
    </div>
</div>
<%- /* Expose locals as `window.SAILS_LOCALS` :: */ exposeLocalsToBrowser() %>
